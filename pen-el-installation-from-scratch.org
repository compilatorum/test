#+LATEX_HEADER: \usepackage[margin=0.5in]{geometry}
#+OPTIONS: toc:nil

#+HUGO_BASE_DIR: /home/shane/dump/home/shane/notes/ws/blog/blog
#+HUGO_SECTION: ./posts

#+TITLE: Pen.el installation from scratch
#+DATE: <2021-12-31>
#+AUTHOR: Shane Mulligan
#+KEYWORDS: pen lsp

** Summary
This is a demo of setting up Pen.el for the first time.

Creating a new user like this is not strictly
necessary, but will help to create an isolated
environment, so the script directory doesn't
pollute your path. However, I've done my best
to use avoid name clashes, and use a =pen-=
prefix for naming scripts.

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  sudo adduser --home /home/pen pen
  sudo usermod -aG docker pen
  sudo usermod -aG sudo pen

  sudo login pen
#+END_SRC

The following instructions are all that are strictly necessary.
Cloning these repos allows you to develop with
=Pen.el= without updating the docker image.

#+BEGIN_SRC bash -n :i bash :async :results verbatim code
  git clone "https://github.com/semiosis/pen.el"
  git clone "https://github.com/semiosis/prompts"

  docker pull semiosis/pen.el:latest

  mkdir -p $HOME/.pen

  # Put in your keys, or do not, it's up to you!
  echo "sk-<openai key here>" > $HOME/.pen/openai_api_key       # https://openai.com/
  echo "<ai21 key here>" > $HOME/.pen/ai21_api_key              # https://www.ai21.com/
  echo "<hf key here>" > $HOME/.pen/hf_api_key                  # https://huggingface.co/
  echo "<nlpcloud key here>" > $HOME/.pen/nlpcloud_api_key      # https://nlpcloud.io/
  echo "<alephalpha key here>" > $HOME/.pen/alephalpha_api_key  # https://aleph-alpha.de/
  echo "<cohere key here>" > $HOME/.pen/cohere_api_key          # https://cohere.ai/

  # Add the scripts to the PATH
  echo export PATH="$(realpath .)/pen.el/scripts:\$PATH" >> $HOME/.profile

  # Add this to prevent C-s from freezing the terminal
  echo "stty stop undef 2>/dev/null; stty start undef 2>/dev/null" | tee -a $HOME/.zshrc >> $HOME/.bashrc

  # Source your .profile
  . $HOME/.profile

  # Run pen
  pen
#+END_SRC

#+BEGIN_EXPORT html
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/at9VpN22g7ZZkf4Vkoy8hIOJJ" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/at9VpN22g7ZZkf4Vkoy8hIOJJ.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/at9VpN22g7ZZkf4Vkoy8hIOJJ.js" id="asciicast-at9VpN22g7ZZkf4Vkoy8hIOJJ" async></script>
#+END_EXPORT

Assuming the key that you entered is the actual key, continue now to use Pen!

#+BEGIN_EXPORT html
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/ZF8boxsqiKpUB6nQeaBszMk4y" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/ZF8boxsqiKpUB6nQeaBszMk4y.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/ZF8boxsqiKpUB6nQeaBszMk4y.js" id="asciicast-ZF8boxsqiKpUB6nQeaBszMk4y" async></script>
#+END_EXPORT

In this test, everything except Apostrophe seemed to be working on a clean installation.
I have introduced a bug that I will fix soon. Done!

#+BEGIN_EXPORT html
<!-- Play on asciinema.com -->
<!-- <a title="asciinema recording" href="https://asciinema.org/a/pxrwm2tI47KCDwKGwHaqKL18M" target="_blank"><img alt="asciinema recording" src="https://asciinema.org/a/pxrwm2tI47KCDwKGwHaqKL18M.svg" /></a> -->
<!-- Play on the blog -->
<script src="https://asciinema.org/a/pxrwm2tI47KCDwKGwHaqKL18M.js" id="asciicast-pxrwm2tI47KCDwKGwHaqKL18M" async></script>
#+END_EXPORT

Apostrophe is working now. You can even start
conversations with SMEs based on whatever text
you see on screen. That includes the
conversation with whichever chatbot you are
conversing with currently!